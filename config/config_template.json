{
  "width": 1000,
  "height": 1000,
  "pixel_to_m": 16,
  "depot": {
    "x": 500,
    "y": 500,
    "radius": 50
  },
  "evaluation_type": "EVAL_TYPE",
  "simulation_steps": TIME_STEPS,
  "episodes_no": NO_EPISODES,
  "seed": SEED,
  "visualization": {
    "activate": false,
    "fps": 60,
    "graphics": false
  },
  "random_walk": {
    "random_walk_factor": 0.9,
    "levi_factor": 1.4
  },
  "agent": {
    "radius": 80,
    "speed": SPEED,
    "frame_weight": 10,
    "battery_weight": 10,
    "theoritical_battery_capacity": 800,
    "min_battery_health": MIN_BH,
    "max_battery_health": MAX_BH,
    "communication_radius": 50,
    "noise_sampling_mu": 0.0,
    "noise_sampling_sigma": 0.0,
    "noise_sd": 0.0,
    "fuel_cost": 0
  },
  "behaviors": [
    {
      "class": "NaiveBehavior",
      "population_size": S_NAIVE,
      "parameters": {
        "working_threshold": WORKING_THRESH 
      }
    },
    {
      "class": "DecentralisedLearningBehavior_HeuristicBids",
      "population_size": S_DECENTRALISED_LEARNING_HEURISTIC,
      "parameters": {
        "working_threshold": WORKING_THRESH,
        "exploration_probability": EXPLORATION_PROBABILITY
      }
    },
    {
      "class": "DecentralisedLearningBehavior_DistanceBids",
      "population_size": S_DECENTRALISED_LEARNING_DISTANCE,
      "parameters": {
        "working_threshold": WORKING_THRESH,
        "exploration_probability": EXPLORATION_PROBABILITY
      }
    },
    {
      "class": "DecentralisedLearningBehavior_DistanceHuberBids",
      "population_size": S_DECENTRALISED_LEARNING_DISTANCE_HUBER,
      "parameters": {
        "working_threshold": WORKING_THRESH,
        "exploration_probability": EXPLORATION_PROBABILITY
      }
    },
     {
    "class": "DecentralisedLearningBehavior_ProbabilityBids",
    "population_size": S_DECENTRALISED_LEARNING_PROBABILITY,
    "parameters": {
      "working_threshold": WORKING_THRESH,
      "exploration_probability": EXPLORATION_PROBABILITY
    }
    }
  ],
  "orders": {
    "times":{
      "orders_per_episode": ORDERS_PER_EPISODE,
      "orders_arrival_probability": 0.01,
      "interval_between_orders_arrivals": ORDER_ARRIVAL_INTERVAL
    },

    "distances":{
      "min_distance": MIN_PACKAGE_DISTANCE,
      "max_distance": MAX_PACKAGE_DISTANCE
    },
    "weights":{
      "min_package_weight": MIN_PACKAGE_WEIGHT,
      "max_package_weight": MAX_PACKAGE_WEIGHT
    },
    "radius": 80,
    "look_ahead_size": LOOK_AHEAD_SIZE,
    "timeout": TIMEOUT 
  },
  "data_collection": {
    "output_directory": "DATA_FOLDER",
    "filename": "DATA_FILE_NAME",
    "recording_interval": DATA_RECORDING_INTERVAL
  }
}